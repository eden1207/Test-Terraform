name: Terraform Pipeline

on:
  push:
    branches:
      - main  # Déclencher uniquement sur les push sur la branche 'main'
  pull_request:
    branches:
      - main  # Déclencher sur les pull requests vers la branche 'main'

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    steps:
      # Checkout le code du dépôt
      - name: Checkout Code
        uses: actions/checkout@v3

        # Naviguer dans le répertoire 'projet'
      - name: Change directory to projet
        run: cd projet

      # Configurer Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5 # La version de Terraform que vous souhaitez utiliser

      # Initialiser Terraform
      - name: Terraform Init
        run: terraform init

      # Ajouter les secrets dans les variables d'environnement
      - name: Set environment variables
        run: echo "Setting environment variables"
        env:
          DEV_CLIENT_ID: ${{ secrets.DEV_CLIENT_ID }}
          DEV_CLIENT_SECRET: ${{ secrets.DEV_CLIENT_SECRET }}
          DEV_AWS_REGION: ${{ secrets.DEV_AWS_REGION }}

      # Terraform Plan - Créer un plan d'exécution Terraform
      - name: Terraform Plan
        run: terraform plan -var "DEV_CLIENT_ID=${{ secrets.DEV_CLIENT_ID }}" \
                            -var "DEV_CLIENT_SECRET=${{ secrets.DEV_CLIENT_SECRET }}" \
                            -var "DEV_AWS_REGION=${{ secrets.DEV_AWS_REGION }}"

      # Terraform Apply - Appliquer le plan (vous pouvez le conditionner)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -var "DEV_CLIENT_ID=${{ secrets.DEV_CLIENT_ID }}" \
                                           -var "DEV_CLIENT_SECRET=${{ secrets.DEV_CLIENT_SECRET }}" \
                                           -var "DEV_AWS_REGION=${{ secrets.DEV_AWS_REGION }}"